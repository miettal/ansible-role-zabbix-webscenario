---
- name: Requesting API authentification token
  uri:
    url: "{{ server_url }}/api_jsonrpc.php"
    return_content: yes
    method: POST
    body: "{{lookup('template','templates/auth.j2')}}"
    body_format: json
    headers:
      Content-Type: "application/json-rpc"
  register: z_firstquery
  tags:
    - auth

- name: Parsing the authentification request to extract the token
  set_fact: "z_authtoken={{z_firstquery.json.result}}"
  tags:
    - auth

- name: try to get httptest id
  uri:
    url: "{{ server_url }}/api_jsonrpc.php"
    return_content: yes
    body: "{{lookup('template','templates/get_httptest.j2')}}"
    body_format: json
    headers:
      Content-Type: "application/json-rpc"
  register: httptestidquery

- name: Parsing the get_httptest request to extract the httptestid
  set_fact:
    httptestid: "{% if httptestidquery.json.result | length > 0 %}{{ httptestidquery.json.result.0.httptestid }}{% endif %}"

- name: Deleting the supposed absent web scenarios in Zabbix
  uri:
    url: "{{ server_url }}/api_jsonrpc.php"
    return_content: yes
    method: POST
    body: "{{lookup('template','templates/del_site.j2')}}"
    body_format: json
    headers:
      Content-Type: "application/json-rpc"
  when: "state == 'absent'"
  tags:
    - delete

- name: Getting the hostid and applicationids
  uri:
    url: "{{ server_url }}/api_jsonrpc.php"
    return_content: yes
    body: "{{lookup('template','templates/get_host.j2')}}"
    body_format: json
    headers:
      Content-Type: "application/json-rpc"
  register: hostidquery
  tags:
    - add

- name: Parsing the get_host request to extract the hostid
  set_fact: "hostid={{ hostidquery.json.result.0.hostid }}"
  tags:
    - add

- name: Getting application names
  uri:
    url: "{{ server_url }}/api_jsonrpc.php"
    return_content: yes
    body: "{{lookup('template','templates/get_application.j2')}}"
    body_format: json
    headers:
      Content-Type: "application/json-rpc"
  register: applicationquery
  when: "application is defined"
  tags:
    - add

- name: Parsing the get_application request to extract the applicationid
  set_fact: "applicationid={{ (applicationquery.json.result|selectattr('name', 'equalto', application)|first).applicationid }}"
  when: "application is defined"
  tags:
    - add

- name: Adding web scenarios (zabbix API handles the indepotency)
  uri:
    url: "{{ server_url }}/api_jsonrpc.php"
    return_content: yes
    method: POST
    body: "{{lookup('template','templates/add_web.j2')}}"
    body_format: json
    headers:
      Content-Type: "application/json-rpc"
  when: "state == 'present'"
  tags:
    - add

# - name: Adding associated triggers (zabbix API handles the indepotency)
#   uri:
#     url: "{{ server_url }}/api_jsonrpc.php"
#     return_content: yes
#     method: POST
#     body: "{{lookup('template','templates/add_trigger.j2')}}"
#     body_format: json
#     headers:
#       Content-Type: "application/json-rpc"
#   when: "state == 'present'"
#   tags:
#     - add
#     - trigger

- name: Logging out from Zabbix API
  uri:
    url: "{{ server_url }}/api_jsonrpc.php"
    return_content: yes
    method: POST
    body: "{{lookup('template','templates/logout.j2')}}"
    body_format: json
    headers:
      Content-Type: "application/json-rpc"
  tags:
    - auth
